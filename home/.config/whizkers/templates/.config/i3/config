# metakirby5's i3 config

## VARIABLES

# Theme
set $wallpapers         {{ wallpapers }}
set $cFocusBG           {{ n_primary }}
set $cFocusFG           {{ b_white }}
set $cFocusIN           {{ b_primary }}
set $cSubFocusBG        {{ n_black }}
set $cSubFocusFG        {{ n_white }}
set $cSubFocusIN        {{ b_black }}
set $cUnfocusBG         {{ n_black }}
set $cUnfocusFG         {{ n_white }}
set $cUnfocusIN         {{ b_black }}
set $cUrgentBG          #aa4e60
set $cUrgentFG          #ffffff
set $cUrgentIN          #f79bad
set $cMainBG            {{ bgc }}
set $cMainFG            {{ fgc }}
set $fontName           tewi
set $fontSize           8
set $border             7
set $gapsInner          20
set $gapsOuter          0

# Bar
set $barFontName        tewi
set $barFontSize        8
set $cBarSeparator      #888888
set $barSeparator       <

# dmenu
set $dmCounter          ~/.dmenu_counter.json
set $dmFontName         tewi:pixelsize=32
set $dmPrompt           λ
set $dmHeight           100

# Settings
set $term               urxvt256cc
set $volChangeSound     /usr/share/sounds/gnome/default/alerts/drip.ogg
set $volPct             5
set $brightPct          10
set $movePx             20

# Workspaces
set $wDash              number 0:★
set $w1                 number 1:一
set $w2                 number 2:二
set $w3                 number 3:三
set $w4                 number 4:四
set $w5                 number 5:五
set $w6                 number 6:六
set $w7                 number 7:七
set $w8                 number 8:八
set $w9                 number 9:九
set $w10                number 10:十

# Keys
set $mod                Mod4
set $mod2               Mod1
set $up                 k
set $down               j
set $left               h
set $right              l

# Shortcuts
set $nsi                --no-startup-id
set $xwi                xwininfo -tree -root | grep

## SESSION

exec_always $nsi feh -zr --bg-fill $wallpapers

# Terminal on scratch
set $spT scratchpad_term
for_window [instance="^$spT$"] move scratchpad
bindsym $mod+equal exec $nsi ($xwi $spT || $term -name $spT) && i3-msg '[instance="^$spT$"] scratchpad show'

# Music on scratch
set $spM scratchpad_music
for_window [instance="^$spM$"] move scratchpad
bindsym $mod+backslash exec $nsi ($xwi $spM || $term -name $spM -e ncmpcpp) && i3-msg '[instance="^$spM$"] scratchpad show'

# Default workspaces
workspace "1:一" output eDP1

## SETTINGS

font pango:$fontName $fontSize
floating_modifier $mod
focus_follows_mouse no
mouse_warping none
workspace_auto_back_and_forth yes

# Borders
new_window pixel
for_window [class=".*"] border pixel $border

# Gaps
gaps inner $gapsInner
gaps outer $gapsOuter

# Colors

client.background       $cMainBG

# class                 border        backgr.       text          indicator
client.focused          $cFocusBG     $cFocusBG     $cFocusFG     $cFocusIN
client.focused_inactive $cSubFocusBG  $cSubFocusBG  $cSubFocusFG  $cSubFocusIN
client.unfocused        $cUnfocusBG   $cUnfocusBG   $cUnfocusFG   $cUnfocusIN
client.urgent           $cUrgentBG    $cUrgentBG    $cUrgentFG    $cUrgentIN
client.placeholder      $cUnfocusBG   $cUnfocusBG   $cUnfocusFG   $cUnfocusIN

# Bar
# https://github.com/ivyl/i3-config/blob/master/conkyrc
# bindsym $mod+b bar hidden_state toggle
bar {
#   mode hide
#   hidden_state show
#   modifier $mod2
  tray_output none
  position top
  strip_workspace_numbers yes
  font pango:$barFontName $barFontSize
  separator_symbol "$barSeparator"
  status_command ~/.config/i3/conky-wrapper
  colors {
    background  $cMainBG
    statusline  $cMainFG
    separator   $cBarSeparator
    focused_workspace   $cMainBG  $cSubfocusBG  $cFocusFG
    active_workspace    $cMainBG  $cFocusIN     $cFocusFG
    inactive_workspace  $cMainBG  $cMainBG      $cUnfocusFG
    urgent_workspace    $cMainBG  $cUrgentBG    $cUrgentFG
  }
}

## WINDOW RULES

# Popups
for_window [window_role="pop-up|task_dialog"] floating enable

## KEYS

# Tasks
set $_update_configs        whizkers && reload-xresources
bindsym $mod+f              fullscreen toggle
bindsym $mod+Shift+q        kill
bindsym $mod+Shift+u        exec $nsi whizkers && reload-xresources
bindsym $mod+Shift+c        reload
bindsym $mod+Shift+r        restart
bindsym $mod+Escape         exec $nsi xautolock -locknow
bindsym $mod+Shift+Escape   exit

# Executables
bindsym $mod+r exec $nsi j4-dmenu-desktop --term='$term' --dmenu='dmenu_counter dmenu -i -f -t -p "$dmPrompt" -fn "$dmFontName" -nf "$cUnfocusFG" -nb "$cUnfocusBG" -sf "$cFocusFG" -sb "$cFocusBG" -b -h $dmHeight -counter $dmCounter'
bindsym $mod+t exec $nsi $term
# Network manager
bindsym $mod+n exec $nsi $term -e nmtui
# File browser
bindsym $mod+e exec $nsi $term -e ranger
# Display currently playing song
bindsym $mod+Shift+backslash exec $nsi mpc-notify
# Next wallpaper
bindsym $mod+Control+w exec $nsi feh -zr --bg-fill $wallpapers

# Screenshots to clipboard
set $_scrot               scrot "$HOME/Pictures/Screenshots/%m-%d-%y_%T.png"
set $_scrot-clip-notify   'xclip -sel c -t image/png $f && notify-send -a "scrot" "Screenshot on clipboard" "$f"'
set $_scrot-cancel        notify-send -a "scrot" "Error" "Screenshot failed."
bindsym --release Print         exec $nsi $_scrot -e $_scrot-clip-notify || $_scrot-cancel
bindsym --release Shift+Print   exec $nsi $_scrot -se $_scrot-clip-notify || $_scrot-cancel
bindsym --release Control+Print exec $nsi imgur-screenshot

# Media controls
bindsym $mod+Home         exec $nsi mpc toggle && killall -SIGUSR1 conky
bindsym $mod+End          exec $nsi mpc stop && killall -SIGUSR1 conky
bindsym $mod+Page_Up      exec $nsi mpc prev
bindsym $mod+Page_Down    exec $nsi mpc next

# Volume controls
bindsym XF86AudioLowerVolume exec $nsi amixer set Master $volPct%- && ogg123 $volChangeSound && killall -SIGUSR1 conky
bindsym XF86AudioRaiseVolume exec $nsi amixer set Master $volPct%+ && ogg123 $volChangeSound && killall -SIGUSR1 conky
bindsym XF86AudioMute exec $nsi amixer set Master toggle && ogg123 $volChangeSound && killall -SIGUSR1 conky

# Screen brightness controls
bindsym XF86MonBrightnessUp exec $nsi xbacklight -inc $brightPct
bindsym XF86MonBrightnessDown exec $nsi xbacklight -dec $brightPct

# Change focus
bindsym $mod+space          focus mode_toggle
bindsym $mod+a              focus parent
bindsym $mod+z              focus child

bindsym $mod+$left          focus left
bindsym $mod+$down          focus down
bindsym $mod+$up            focus up
bindsym $mod+$right         focus right
bindsym $mod+minus          scratchpad show

# Move focused window
bindsym $mod+Shift+space        floating toggle
bindsym $mod+c                  move position center

bindsym $mod+Shift+$left        move left       $movePx px
bindsym $mod+Shift+$down        move down       $movePx px
bindsym $mod+Shift+$up          move up         $movePx px
bindsym $mod+Shift+$right       move right      $movePx px
bindsym $mod+Shift+minus        move scratchpad


# Outputs mode
set $_outmode outputs
mode "$_outmode" {
  # Duplicate some controls
    # Change focus
    bindsym $mod+backslash      focus mode_toggle
    bindsym $mod+a              focus parent
    bindsym $mod+z              focus child

    bindsym $mod+$left          focus left
    bindsym $mod+$down          focus down
    bindsym $mod+$up            focus up
    bindsym $mod+$right         focus right
    bindsym $mod+minus          scratchpad show

    # Move focused window
    bindsym $mod+Shift+backslash    floating toggle
    bindsym $mod+c                  move position center

    bindsym $mod+Shift+$left        move left       $movePx px
    bindsym $mod+Shift+$down        move down       $movePx px
    bindsym $mod+Shift+$up          move up         $movePx px
    bindsym $mod+Shift+$right       move right      $movePx px
    bindsym $mod+Shift+minus        move scratchpad

    # Switch to workspace
    bindsym $mod+w              workspace back_and_forth
    bindsym $mod+bracketleft    workspace prev_on_output
    bindsym $mod+bracketright   workspace next_on_output

    bindsym $mod+grave workspace  $wDash
    bindsym $mod+1 workspace      $w1
    bindsym $mod+2 workspace      $w2
    bindsym $mod+3 workspace      $w3
    bindsym $mod+4 workspace      $w4
    bindsym $mod+5 workspace      $w5
    bindsym $mod+6 workspace      $w6
    bindsym $mod+7 workspace      $w7
    bindsym $mod+8 workspace      $w8
    bindsym $mod+9 workspace      $w9
    bindsym $mod+0 workspace      $w10

    # Move focused container to workspace
    bindsym $mod+Shift+w              move container to workspace back_and_forth; workspace back_and_forth
    bindsym $mod+Shift+bracketleft    move container to workspace prev_on_output; workspace prev_on_output
    bindsym $mod+Shift+bracketright   move container to workspace next_on_output; workspace next_on_output

    bindsym $mod+Shift+grave move container to workspace $wDash; workspace $wDash
    bindsym $mod+Shift+1 move container to workspace $w1; workspace $w1
    bindsym $mod+Shift+2 move container to workspace $w2; workspace $w2
    bindsym $mod+Shift+3 move container to workspace $w3; workspace $w3
    bindsym $mod+Shift+4 move container to workspace $w4; workspace $w4
    bindsym $mod+Shift+5 move container to workspace $w5; workspace $w5
    bindsym $mod+Shift+6 move container to workspace $w6; workspace $w6
    bindsym $mod+Shift+7 move container to workspace $w7; workspace $w7
    bindsym $mod+Shift+8 move container to workspace $w8; workspace $w8
    bindsym $mod+Shift+9 move container to workspace $w9; workspace $w9
    bindsym $mod+Shift+0 move container to workspace $w10; workspace $w10

  # Focus
  bindsym $left             focus output left
  bindsym $right            focus output right
  bindsym $up               focus output up
  bindsym $down             focus output down

  # Move container
  bindsym Shift+$left       move container to output left
  bindsym Shift+$right      move container to output right
  bindsym Shift+$up         move container to output up
  bindsym Shift+$down       move container to output down

  # Move workspace
  bindsym Control+$left     move container to output left
  bindsym Control+$right    move container to output right
  bindsym Control+$up       move container to output up
  bindsym Control+$down     move container to output down

  # Return to default mode
  bindsym Escape            mode "default"
  bindsym $mod+y            mode "default"
}
bindsym $mod+y mode "$_outmode"

# Resize focused windows
bindsym $mod+Control+$left      resize shrink width   $movePx px or 1 ppt
bindsym $mod+Control+$down      resize grow height    $movePx px or 1 ppt
bindsym $mod+Control+$up        resize shrink height  $movePx px or 1 ppt
bindsym $mod+Control+$right     resize grow width     $movePx px or 1 ppt

# Gaps
bindsym $mod+g            gaps inner all plus   5
bindsym $mod+Shift+g      gaps inner all minus  5
bindsym $mod+Control+g    gaps inner all set    $gapsInner

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+u layout stacking
bindsym $mod+i layout tabbed
bindsym $mod+o layout toggle split

# Splits
bindsym $mod+p split h
bindsym $mod+Shift+p split v

# Switch to workspace
bindsym $mod+w              workspace back_and_forth
bindsym $mod+bracketleft    workspace prev_on_output
bindsym $mod+bracketright   workspace next_on_output

bindsym $mod+grave workspace  $wDash
bindsym $mod+1 workspace      $w1
bindsym $mod+2 workspace      $w2
bindsym $mod+3 workspace      $w3
bindsym $mod+4 workspace      $w4
bindsym $mod+5 workspace      $w5
bindsym $mod+6 workspace      $w6
bindsym $mod+7 workspace      $w7
bindsym $mod+8 workspace      $w8
bindsym $mod+9 workspace      $w9
bindsym $mod+0 workspace      $w10

# Move focused container to workspace
bindsym $mod+Shift+w              move container to workspace back_and_forth; workspace back_and_forth
bindsym $mod+Shift+bracketleft    move container to workspace prev_on_output; workspace prev_on_output
bindsym $mod+Shift+bracketright   move container to workspace next_on_output; workspace next_on_output

bindsym $mod+Shift+grave move container to workspace $wDash
bindsym $mod+Shift+1     move container to workspace $w1
bindsym $mod+Shift+2     move container to workspace $w2
bindsym $mod+Shift+3     move container to workspace $w3
bindsym $mod+Shift+4     move container to workspace $w4
bindsym $mod+Shift+5     move container to workspace $w5
bindsym $mod+Shift+6     move container to workspace $w6
bindsym $mod+Shift+7     move container to workspace $w7
bindsym $mod+Shift+8     move container to workspace $w8
bindsym $mod+Shift+9     move container to workspace $w9
bindsym $mod+Shift+0     move container to workspace $w10

# Rename workspace
bindsym $mod+s exec $nsi i3-msg "rename workspace to \\\"$(dmenu -noinput -f -p 'Rename workspace to' -fn '$dmFontName' -nf '$cUnfocusFG' -nb '$cUnfocusBG' -sf '$cFocusFG' -sb '$cFocusBG' -b -h 100)\\\""

# Marks
set $_get_marks i3-msg -t get_marks | jq '.[]' | cut -c2- | rev | cut -c2- | rev
bindsym $mod+m exec $nsi i3-msg "mark \\\"$($_get_marks | dmenu -i -f -p 'Mark' -fn '$dmFontName' -nf '$cUnfocusFG' -nb '$cUnfocusBG' -sf '$cFocusFG' -sb '$cFocusBG' -b -h 100)\\\""
bindsym $mod+apostrophe exec $nsi i3-msg "[con_mark=\\\"$($_get_marks | dmenu -i -f -p 'Go to mark' -fn '$dmFontName' -nf '$cUnfocusFG' -nb '$cUnfocusBG' -sf '$cFocusFG' -sb '$cFocusBG' -b -h 100)\\\"] focus"
